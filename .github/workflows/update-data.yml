name: Update Data from Google Sheets
on:
  schedule:
    - cron: '0 0,12 * * *'  # 매일 자정, 정오 (한국시간 오전9시, 오후9시)
  workflow_dispatch:  # 수동 실행 가능

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Download CSV from Google Sheets
        run: |
          curl -L "https://docs.google.com/spreadsheets/d/1TqArMJXSNRz9AJAJ0NNHYmQQv5Gh5TbNuNNqD107O1Y/export?format=csv" > hwaseong.csv
          echo "✅ 화성시 데이터 다운로드 완료"
          echo "총 $(wc -l < hwaseong.csv) 줄"
      
      - name: Convert CSV to JSON
        run: |
          npm init -y
          npm install csv-parser
          
          cat > convert.js << 'EOF'
          const fs = require('fs');
          const csv = require('csv-parser');
          
          const results = [];
          fs.createReadStream('hwaseong.csv')
            .pipe(csv())
            .on('data', (data) => {
              // 각 레코드에 고유 ID 추가
              data.id = data.카드번호 || `card_${results.length + 1}`;
              results.push(data);
            })
            .on('end', () => {
              // JSON 파일로 저장
              fs.writeFileSync('data.json', JSON.stringify(results, null, 2));
              console.log(`✅ ${results.length}개 레코드를 JSON으로 변환 완료`);
              
              // 통계 파일 생성
              const stats = {
                lastUpdate: new Date().toISOString(),
                totalRecords: results.length,
                updateTime: new Date().toLocaleString('ko-KR', { timeZone: 'Asia/Seoul' })
              };
              fs.writeFileSync('stats.json', JSON.stringify(stats, null, 2));
            });
          EOF
          
          node convert.js
      
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data.json stats.json
          git diff --quiet && git diff --staged --quiet || (
            git commit -m "📊 데이터 업데이트: $(date +'%Y-%m-%d %H:%M')"
            git push
          )
